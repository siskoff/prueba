#line 91 "H:\fwh641702\include\FiveWin.ch"
         EXTERNAL FW_GT
















extern errorsys












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 "h:\source\Main.prg"
static oWnd

FUNCTION Main()

   LOCAL oBar, oBar1, oBar2
   LOCAL cTitle, x
   LOCAL cFont   := "Arial Unicode MS"
   LOCAL cFontH  := -14
   LOCAL aFonts

   PUBLIC G_ADHOC  := "ADHOC\"
   PUBLIC G_IDIOMA := "ESPANOL\"
   PUBLIC G_MENUS  := "MENUS\"
   PUBLIC G_SYSTEM := "SYSTEM\"
   PUBLIC G_ROOT   := MiRuta()
   PUBLIC NO := .F.








  oFontMenu := TFont():New( cFont, 0, -14,,,,,300,,,,,,,,, )

  cTitle := "Titulo"


  oWnd := TMdiFrame():New( 3, 6, 20, 70, cTitle,, BWMENU("MAIN",.T.),,, 16777215, 16777215,,,,,,, "oWnd",, )
  oWnd:SetFont( oFontMenu )



   oWnd:oMsgBar := TMsgBar():New( oWnd, "Test", .F., .T., .T., .T., ( 10 + ( 10 * 256 ) + ( 10 * 65536 ) ), 16777215, oFontMenu, !.T., .F., if( .F., .F., .F. ), !.T., .T. )

   oWnd:Activate( Upper("MAXIMIZED"), oWnd:bLClicked, oWnd:bRClicked, oWnd:bMoved, oWnd:bResized, oWnd:bPainted, oWnd:bKeyDown, oWnd:bInit,,,,,,,,,,, oWnd:bLButtonUp, .F. )




   While oFontMenu:nCount > 0
      oFontMenu:End()
   Enddo

   if File( "checkres.txt" )
      FErase( "checkres.txt" )
   endif
   CheckRes()

return nil

FUNCTION BWMENU( cMenu , lMain )


   LOCAL oMenu
   LOCAL cPath := G_IDIOMA + G_MENUS + cMenu
   LOCAL cRoot := G_ROOT
   LOCAL oSubMenu
   LOCAL cAlias
   If( lMain == nil, lMain := .F., ) ;

   cPath += IF(lMain,".MEN",".MNU")

   IF FILE( cRoot + G_ADHOC + cPath )
      cMenu := cRoot + G_ADHOC + cPath
   ELSEIF FILE( cRoot + cPath )
      cMenu := cRoot + cPath
   ELSE

      RETURN Nil
   ENDIF

   dbUseArea( .T., "DBFNTX", ( cMenu ),, iif( .F. .OR. .F., ! .F., NIL ), .F. )
   cAlias := Alias()

   oMenu := MenuBegin( .F.,,, .F., .F.,,,,,,,,,, .F., oFontMenu, .F., .F., .T., .F., !.T., ,,,,,, .F.,, .F., .F.,,,,,, )

      while !EOF()
         cString  := OemToAnsi(Alltrim(M_OPCION))
         cProceso := OemToAnsi(Alltrim(UPPER(M_PROCESO)))
         cMensaje := OemToAnsi(Alltrim(UPPER(M_MENSAJE)))
         cCondi   := OemToAnsi(Alltrim(UPPER(M_CONDI)))
       IF !cCONDI$".F."

         IF "/"=cString
            MenuAddItem(,,,,,,,,,,,,,,,,,.T.,,,,,,,,,,,,,,,,,)
            DbSkip(1)
            LOOP
         ENDIF
         lSubMenu := "BWMENU"$UPPER(cProceso)
         IF lSubMenu
            MenuAddItem( cString,, .F.,,,,,,,,, .F.,,, .F., ,.F., .F.,,,,,,,,,, .F., .F.,,,,,,, ,, .F., .F., .F.,, )
            &cProceso
         ELSE
            IF !EMPTY(cProceso)
               MenuAddItem( cString,cMensaje, .F.,, {|oMenuItem| &cProceso },,,,,,, .F.,,, .F., ,.F., .F.,,,,,,,,,, .F., .F.,,,,,,, ,, .F., .F., .F.,, )
            ENDIF
         ENDIF
       ENDIF
         dbSelectArea( ( cAlias ) )
         ( cAlias ) ->( DbSkip(1) )
      ENDDO
      ( cAlias ) ->( DbCloseArea() )
      IF lMain
         MenuAddItem( "Pruebas",, .F.,, {|oMenuItem|CATALOGO( "SISTEMAS" )},,,,,,, .F.,,, .F., ,.F., .F.,,,,,,,,,, .F., .F.,,,,,,, ,, .F., .F., .F.,, )
         MenuAddItem( "Tree",, .F.,, {|oMenuItem|ChildTree(oWnd)},,,,,,, .F.,,, .F., ,.F., .F.,,,,,,,,,, .F., .F.,,,,,,, ,, .F., .F., .F.,, )

         oMenu:AddMdi()
         oMenu:AddHelp( "Pruebas Mostkoff", "(c) Corporativo OrtopÃ©dico Mostkoff" )
      ENDIF
   MenuEnd()

RETURN oMenu

FUNCTION CATALOGO( cTable )
   LOCAL oWndChild,oBrowse
   LOCAL cPath := G_SYSTEM + cTable + ".DBF"

   LOCAL cAlias
   LOCAL cFile := G_ROOT + cPath

   LOCAL I_BASED := "DATOSC\M_"

   cFile := G_ROOT + I_BASED + cTable + ".DBF"

   IF FILE( cFile )
      dbUseArea( .T., "DBFNTX", ( cFile ),, iif( .F. .OR. .F., ! .F., NIL ), .F. )
      cAlias := Alias()

      oWndChild := TMdiChild():New(,,,, cAlias,,, oWnd,, .F.,,,,, .F., .F.,,, !.F., !.F., !.F., !.F.,, )
      oBrowse := TWBrowse():New( 0, 0, 0, 0,,,, oWndChild,,,,,,,,,,,, .F., cAlias, .T.,, .F.,,, )
      oWndChild:setControl(oBrowse)

      oWndChild:Activate(, oWndChild:bLClicked, oWndChild:bRClicked, oWndChild:bMoved, oWndChild:bResized, oWndChild:bPainted, oWndChild:bKeyDown, oWndChild:bInit,,,,,,,,, {|| ((cAlias)->(DbCloseArea()),.T.)},, oWndChild:bLButtonUp, .F. )
   ELSE
      MsgStop("No existe el archivo : "+cTable )
   ENDIF
RETURN NIL

FUNCTION ISDOS()
RETURN( .F. )

FUNCTION CORRE( cString )
RETURN MsgInfo( cString )

FUNCTION File( cFile )
RETURN hb_vfExists( cFile )

FUNCTION ChildTree(oWnd)

   LOCAL oBarra
   LOCAL oChild
   LOCAL oTree


   oChild := TMdiChild():New( 0, 0, 400, 600, "Database",,, oWnd,, .F.,,,,, .T., .F.,,, !.F., !.F., !.F., !.F.,, )























   oChild:Activate(, oChild:bLClicked, oChild:bRClicked, oChild:bMoved, oChild:bResized, oChild:bPainted, oChild:bKeyDown, oChild:bInit := { | Self | oTree := CreaTree(oChild) },,,,,,,,,,, oChild:bLButtonUp, .F. )

RETURN NIL

FUNCTION CreaTree(oChild)

   LOCAL oTree
   LOCAL oRoot
   LOCAL oLink

   LOCAL nStep

   oTree := TTreeView():New( 0, 0, 0, 0, oChild,,,,,,,,,,,, .T., )






   oChild:SetControl(oTree)

   oRoot := oTree:GetRoot()

   oRoot := oRoot:AddLastChild( "Servidor", 9, 9 )

   oRoot:AddLastChild( "Ejecutivo", 0, 10 )

   oLink := oRoot:AddLastChild( "Tablas", 3, 2 )
   FOR nStep = 1 TO 10
       oLink:AddLastChild( "Tabla_" + LTRIM(STR(nStep)) , 0, 6 )
   NEXT

   oLink := oRoot:AddLastChild( "Procedimientos almacenados", 3, 2 )
   FOR nStep = 1 TO 30
       oLink:AddLastChild( "Procedure_" + LTRIM(STR(nStep)) , 0, 7 )
   NEXT

   oLink := oRoot:AddLastChild( "Usuarios", 3, 2 )
   FOR nStep = 1 TO 5
       oLink:AddLastChild( "Usuario_" + LTRIM(STR(nStep)) , 0, 8 )
   NEXT

   oLink := oRoot:AddLastChild( "Respaldos", 3, 2 )
   oLink:AddLastChild("Respaldo de ejemplo",0,11)

   oTree:UpdateTV()

   oTree:SetFocus()

RETURN oTree

FUNCTION MIRUTA()
RETURN  cFilePath(GetModuleFileName( GetInstance() ) )
