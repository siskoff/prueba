#line 91 "H:\fwh641702\include\FiveWin.ch"
         EXTERNAL FW_GT
















extern errorsys












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 5 "h:\source\clases\Treelink.prg"
_HB_CLASS TTreeLink ; function TTreeLink ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TTreeLink", iif( .F., { }, { @HBObject() } ), @TTreeLink() ) ) ;

   _HB_MEMBER { TreeWnd } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"TreeWnd"}, .F. )
   _HB_MEMBER { ParentLink } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"ParentLink"}, .F. )
   _HB_MEMBER { FirstChild, LastChild } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"FirstChild", "LastChild"}, .F. )
   _HB_MEMBER { NextSibling, PrevSibling } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"NextSibling", "PrevSibling"}, .F. )
   _HB_MEMBER { lOpened, IndentLevel } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lOpened", "IndentLevel"}, .F. )
   _HB_MEMBER { TreeItem } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"TreeItem"}, .F. )

   _HB_MEMBER New( oTreeWnd) AS CLASS TTreeLink; oClass:AddMethod( "New", @TTreeLink_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER AddAtHead( cPrompt, iBmpClose, iBmpOpen); oClass:AddMethod( "AddAtHead", @TTreeLink_AddAtHead(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER AddAtTail( cPrompt, iBmpClose, iBmpOpen); oClass:AddMethod( "AddAtTail", @TTreeLink_AddAtTail(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER AddAfter( cPrompt, iBmpClose, iBmpOpen); oClass:AddMethod( "AddAfter", @TTreeLink_AddAfter(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER AddFirstChild( cPrompt, iBmpClose, iBmpOpen); oClass:AddMethod( "AddFirstChild", @TTreeLink_AddFirstChild(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER AddLastChild( cPrompt, iBmpClose, iBmpOpen); oClass:AddMethod( "AddLastChild", @TTreeLink_AddLastChild(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER GetBitmap(); oClass:AddInline( "GetBitmap", {|Self | ( ( Self ) ), { ::TreeItem:iBmpOpen, ::TreeItem:iBmpClose } }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Kill(); oClass:AddMethod( "Kill", @TTreeLink_Kill(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SetIndent(); oClass:AddInline( "SetIndent", {|Self, nIndentLevel | ( ( Self ) ), ::IndentLevel := nIndentLevel }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER GetIndent(); oClass:AddInline( "GetIndent", {|Self | ( ( Self ) ), ::IndentLevel }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER IsRoot(); oClass:AddInline( "IsRoot", {|Self | ( ( Self ) ), ::ParentLink == nil }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER IsParent(); oClass:AddInline( "IsParent", {|Self | ( ( Self ) ), ::FirstChild <> nil .AND. ::LastChild <> nil }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER IsLastChild(); oClass:AddMethod( "IsLastChild", @TTreeLink_IsLastChild(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER IsFirstChild(); oClass:AddMethod( "IsFirstChild", @TTreeLink_IsFirstChild(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER IsOpened(); oClass:AddInline( "IsOpened", {|Self | ( ( Self ) ), ::lOpened }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER ToggleOpened(); oClass:AddInline( "ToggleOpened", {|Self | ( ( Self ) ), ::lOpened := iif( ::lOpened, .F., .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TTreeLink ;

static FUNCTION TTreeLink_New( oTreeWnd, lOpened ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

 If( lOpened == nil, lOpened := .F., ) ;

   ::TreeWnd := oTreeWnd
   ::lOpened  := lOpened
   ::ParentLink := nil
   ::FirstChild := nil
   ::LastChild    := nil
   ::PrevSibling := nil
   ::NextSibling := nil
   ::IndentLevel := 0

return nil

static FUNCTION TTreeLink_AddAtHead( cPrompt, iBmpClose, iBmpOpen ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

 Local NewItem, NewLink, head

   NewItem := TVItem():New( cPrompt, iBmpClose, iBmpOpen )
   NewLink := TTreeLink():New( ::TreeWnd )

   NewLink:TreeItem   := NewItem
   NewLink:ParentLink := ::ParentLink

   if ::ParentLink <> nil
      head = ::ParentLink:FirstChild
   else
      head = Self
      while head:PrevSibling <> nil
     head = head:PrevSibling
      end
   endif

   NewLink:NextSibling = head
   head:PrevSibling    = NewLink

   if ::ParentLink <> nil
      ::ParentLink:FirstChild = NewLink
   endif

return NewLink

static FUNCTION TTreeLink_AddAtTail( cPrompt, iBmpClose, iBmpOpen ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

 Local NewItem, NewLink, tail

   NewItem := TVItem():New( cPrompt, iBmpClose, iBmpOpen )
   NewLink := TTreeLink():New( ::TreeWnd )

   NewLink:TreeItem   := NewItem
   NewLink:ParentLink := ::ParentLink

   if ::ParentLink <> nil
      tail = ::ParentLink:LastChild
   else
      tail = Self
      while tail:NextSibling <> nil
     tail = tail:NextSibling
      end
   endif

   NewLink:PrevSibling = tail
   tail:NextSibling    = NewLink

   if ::ParentLink <> nil
      ::ParentLink:LastChild = NewLink
   endif

return NewLink

static FUNCTION TTreeLink_AddAfter( cPrompt, iBmpClose, iBmpOpen ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

 Local NewItem, NewLink

   NewItem := TVItem():New( cPrompt, iBmpClose, iBmpOpen )
   NewLink := TTreeLink():New( ::TreeWnd )

   NewLink:TreeItem   := NewItem
   NewLink:ParentLink := ::ParentLink

   if ( ::ParentLink <> nil ) .AND. ( ::ParentLink:LastChild == Self )
      ::ParentLink:LastChild := NewLink
   endif

   NewLink:PrevSibling := Self
   NewLink:NextSibling := ::NextSibling
   if ::NextSibling <> nil
      ::NextSibling:PrevSibling := NewLink
   endif
   ::NextSibling := NewLink

return NewLink

static FUNCTION TTreeLink_AddFirstChild( cPrompt, iBmpClose, iBmpOpen ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

 Local NewItem, NewLink

   NewItem := TVItem():New( cPrompt, iBmpClose, iBmpOpen )
   NewLink := TTreeLink():New( ::TreeWnd )

   NewLink:TreeItem   := NewItem
   NewLink:ParentLink := Self

   if ::FirstChild <> nil
      ::FirstChild:PrevSibling := NewLink
   endif

   NewLink:NextSibling := ::FirstChild

   ::FirstChild := NewLink
   if ::LastChild == nil
      ::LastChild := NewLink
   endif

return NewLink

static FUNCTION TTreeLink_AddLastChild( cPrompt, iBmpClose, iBmpOpen ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

 Local NewItem, NewLink

   NewItem := TVItem():New( cPrompt, iBmpClose, iBmpOpen )
   NewLink := TTreeLink():New( ::TreeWnd )

   NewLink:TreeItem   := NewItem
   NewLink:ParentLink := Self

   if ::LastChild <> nil
      ::LastChild:NextSibling := NewLink
   endif

   NewLink:PrevSibling := ::LastChild

   ::LastChild := NewLink
   if ::FirstChild == nil
      ::FirstChild := NewLink
   endif

return NewLink

static FUNCTION TTreeLink_IsLastChild( ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

   if ::ParentLink == nil
      return .F.
   endif

   if ::ParentLink:LastChild == Self
      return .T.
   endif

return .F.

static FUNCTION TTreeLink_IsFirstChild( ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink

   if ::ParentLink == nil
      return .F.
   endif

   if ::ParentLink:FirstChild == Self
      return .T.
   endif

return .F.

static FUNCTION TTreeLink_Kill( ) ; local Self AS CLASS TTreeLink := QSelf() AS CLASS TTreeLink


   if ::IsRoot()
      return .F.
   endif


   if ::PrevSibling == nil .AND. ::NextSibling == nil
      ::ParentLink:FirstChild := ::ParentLink:LastChild := nil
      return .T.
   endif


   if ::PrevSibling <> nil .AND. ::NextSibling == nil
      ::ParentLink:LastChild := ::PrevSibling
      ::PrevSibling:NextSibling := nil
      return .T.
   endif


   if ::PrevSibling == nil .AND. ::NextSibling <> nil
      ::ParentLink:FirstChild := ::NextSibling
      ::NextSibling:PrevSibling := nil
      return .T.
   endif


   ::NextSibling:PrevSibling := ::PrevSibling
   ::PrevSibling:NextSibling := ::NextSibling

return .T.
